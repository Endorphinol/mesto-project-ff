{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["export function createCard(card, deleteCard, addLike, getUser, openPopupImage) {\n    const templateList = document.querySelector('#card-template').content;\n    const templateCard = templateList.querySelector('.card').cloneNode(true);\n    const likeButton = templateCard.querySelector('.card__like-button');\n    const image = templateCard.querySelector('.card__image');\n    const likeCount = templateCard.querySelector('.card__count');\n    likeCount.textContent = card.likes ? card.likes.length : 0;\n    templateCard.querySelector('.card__title').textContent = card.name;\n    templateCard.querySelector('.card__delete-button').addEventListener('click', () => deleteCard(templateCard, card._id));\n    templateCard.querySelector('.card__like-button').addEventListener('click', () => addLike(likeCount, likeButton, card._id));\n\n    if (getUser !== card.owner._id) {\n        console.log(getUser)\n        console.log(card.owner._id);\n        templateCard.querySelector('.card__delete-button').classList.remove('card__delete-button');\n    }\n\n    image.addEventListener('click', function () {\n        openPopupImage(card.link, card.name)\n    });\n\n    image.src = card.link;\n    image.alt = card.name;\n    return templateCard;\n};\n\nexport function deleteCard(cardElement, idCard) {\n    fetch(`https://nomoreparties.co/v1/wff-cohort-35/cards/${idCard}`, {\n        method: 'DELETE',\n        headers: {\n            authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea'\n        }\n    })\n        .then((response) => {\n            if (response.ok) {\n                cardElement.remove();\n            }\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n};\n\nexport function addLike(likeCount, likeButton, cardId) {\n    const isLiked = likeButton.classList.contains('card__like-button_is-active');\n\n    fetch(`https://nomoreparties.co/v1/wff-cohort-35/cards/likes/${cardId}`, {\n        method: isLiked ? 'DELETE' : 'PUT',\n        headers: {\n            authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea'\n        }\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n        })\n        .then((data) => {\n            likeCount.textContent = data.likes.length;\n            likeButton.classList.toggle('card__like-button_is-active');\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n}\n\n","export function openModal(currentModal) {\n    currentModal.classList.add('popup_is-opened');\n    document.addEventListener('keydown', closeModalEscape);\n};\n\nexport function closeModal(currentModal) {\n    currentModal.classList.remove('popup_is-opened');\n    document.removeEventListener('keydown', closeModalEscape);\n\n};\n\nexport function closeModalOverlay(evt) {\n    const currentModal = document.querySelector('.popup_is-opened');\n    if (evt.target === currentModal) {\n        closeModal(currentModal);\n    }\n};\n\nexport function closeModalEscape(evt) {\n    if (evt.key === 'Escape') {\n        const currentModal = document.querySelector('.popup_is-opened');\n        if (currentModal) {\n            closeModal(currentModal);\n        }\n    }\n};\n\n","export const isValid = (formElement, inputElement, configValidation) => {\n    if (inputElement.validity.patternMismatch) {\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n        inputElement.setCustomValidity(\"\");\n    }\n    if (!inputElement.validity.valid) {\n        showInputError(formElement, inputElement, inputElement.validationMessage, configValidation);\n    } else {\n        hideInputError(formElement, inputElement, configValidation)\n    }\n};\n\nexport const showInputError = (formElement, inputElement, errorMessage, configValidation) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(configValidation.errorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(configValidation.inputErrorClass);\n};\n\nexport const hideInputError = (formElement, inputElement, configValidation) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(configValidation.errorClass);\n    errorElement.textContent = '';\n    errorElement.classList.remove(configValidation.inputErrorClass);\n}\n\nexport const hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => {\n        return !inputElement.validity.valid;\n    })\n};\n\nexport const toggleButtonState = (inputList, buttonElement, configValidation) => {\n    if (hasInvalidInput(inputList)) {\n        buttonElement.disabled = true;\n        buttonElement.classList.add(configValidation.inactiveButtonClass);\n    } else {\n        buttonElement.disabled = false;\n        buttonElement.classList.remove(configValidation.inactiveButtonClass);\n    }\n};\n\nexport const setEventListeners = (formElement, configValidation) => {\n    const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\n    const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\n    toggleButtonState(inputList, buttonElement, configValidation);\n    inputList.forEach((inputElement) => {\n        inputElement.addEventListener('input', () => {\n            isValid(formElement, inputElement, configValidation)\n            toggleButtonState(inputList, buttonElement, configValidation);\n        });\n    });\n};\n\nexport const enableValidation = (configValidation) => {\n    const formList = Array.from(document.querySelectorAll(configValidation.formSelector));\n    formList.forEach((formElement) => {\n        setEventListeners(formElement, configValidation);\n    });\n};\n\n/**\n * Функция очистки валидации формы и неактивности кнопки.\n * @param {string} form Добавляем форму.\n * @param {string} Object Добавляем объект конфигурации со всеми опциями.\n */\n\nexport function clearValidation(formElement, configValidation) {\n    const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\n    const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\n\n    inputList.forEach((inputElement) => {\n        const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n        inputElement.classList.remove(configValidation.errorClass);\n        errorElement.textContent = '';\n        errorElement.classList.remove(configValidation.inputErrorClass);\n    });\n\n    buttonElement.disabled = true;\n    buttonElement.classList.add(configValidation.inactiveButtonClass);\n}\n","// Обновление фотографии пользователя на сайте.\nexport const updatePhoto = formPhotoProfile.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n\n    const buttonElement = formPhotoProfile.querySelector('.popup__button');\n    buttonElement.textContent = \"Сохранение...\";\n    buttonElement.disabled = true;\n\n    fetch(`${newAvatarPhoto.value}`, {\n        method: 'HEAD',\n    })\n        .then(response => {\n            if (!response.ok) {\n                console.log('Произошла ошибка');\n            }\n            const contentType = response.headers.get('Content-Type')\n            if (!contentType.startsWith('image/')) {\n                console.log('URL не является картинкой')\n            }\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        });\n\n    fetch('https://nomoreparties.co/v1/wff-cohort-35/users/me/avatar', {\n        method: 'PATCH',\n        headers: {\n            authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            avatar: `${newAvatarPhoto.value}`\n        })\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n        .then((data) => {\n            Avatar.style.backgroundImage = `url(${data.avatar})`;\n        })\n        .finally(() => {\n            buttonElement.textContent = \"Сохранено\";\n            buttonElement.disabled = false;\n            closeModal(popupNewAvatar);\n        })\n        .catch((error) => {\n            console.log('Ошибка:', error);\n        })\n});\n\n// Редактирование имени и деятельности пользователя на сайте.\nexport const udpateProfile = formEditProfile.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n\n    nameTitle.textContent = nameInput.value;\n    jobTitle.textContent = jobInput.value;\n\n    const buttonElement = formEditProfile.querySelector('.popup__button');\n    buttonElement.textContent = \"Сохранение...\"\n    buttonElement.disabled = true;\n\n    fetch('https://nomoreparties.co/v1/wff-cohort-35/users/me', {\n        method: 'PATCH',\n        headers: {\n            authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            name: nameInput.value,\n            about: jobInput.value\n        })\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n        .then((data) => {\n            jobTitle.textContent = data.name;\n            jobTitle.textContent = data.about;\n        })\n        .finally(() => {\n            clearValidation(formAddCard, configValidation)\n            buttonElement.textContent = \"Сохранено\"\n            buttonElement.disabled = false;\n            closeModal(popupEditProfile);\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n});\n\n// Добавление карточки на сайт.\nexport const addCard = formAddCard.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n\n    const buttonElement = formAddCard.querySelector('.popup__button');\n    buttonElement.textContent = \"Сохранение...\";\n    buttonElement.disabled = true;\n\n    const item = {\n        name: document.querySelector('.popup__input_type_card-name').value,\n        link: document.querySelector('.popup__input_type_url').value,\n    }\n\n    fetch('https://nomoreparties.co/v1/wff-cohort-35/cards', {\n        method: 'POST',\n        headers: {\n            authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            name: item.name,\n            link: item.link,\n        })\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n        .then((data) => {\n            const newCard = createCard(data, deleteCard, addLike, data.owner._id, openPopupImage);\n            cardList.prepend(newCard);\n        })\n        .finally(() => {\n            buttonElement.textContent = \"Сохранено\"\n            buttonElement.disabled = false;\n            formAddCard.reset();\n            closeModal(popupAddCard);\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n});\n\n// Загрузка информации о пользователе с сервера.\nexport const getUserData = fetch('https://nomoreparties.co/v1/wff-cohort-35/users/me', {\n    method: 'GET',\n    headers: {\n        authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea'\n    }\n})\n    .then((response) => {\n        if (response.ok) {\n            return response.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    })\n    .then((data) => {\n        document.querySelector('.profile__image').style.backgroundImage = `url(${data.avatar})`;\n        nameTitle.textContent = data.name;\n        jobTitle.textContent = data.about;\n        return data;\n    })\n    .catch((error) => {\n        console.log('Ошибка', error);\n    });","import '../pages/index.css';\nimport { createCard, deleteCard, addLike } from './card.js';\nimport { openModal, closeModal, closeModalOverlay } from './modal.js';\nimport { enableValidation, clearValidation } from './validation.js';\nimport { updatePhoto, udpateProfile, addCard, getUserData} from './api.js';\n\nconst buttonEditProfile = document.querySelector('.profile__edit-button');\nconst popupEditProfile = document.querySelector('.popup_type_edit');\nconst buttonAddCard = document.querySelector('.profile__add-button');\nconst popupAddCard = document.querySelector('.popup_type_new-card');\nconst popupNewAvatar = document.querySelector('.popup_type_new_avatar');\nconst newAvatarPhoto = document.querySelector('.popup__input_type_avatar');\nconst Avatar = document.querySelector('.profile__image');\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\nconst nameTitle = document.querySelector('.profile__title');\nconst jobTitle = document.querySelector('.profile__description');\nconst formEditProfile = document.querySelector('.popup__form[name=\"edit-profile\"]');\nconst formAddCard = document.querySelector('.popup__form[name=\"new-place\"]');\nconst formPhotoProfile = document.querySelector('.popup__form[name=\"new-avatar\"]');\nconst popupImage = document.querySelector('.popup__image');\nconst popupImageOpen = document.querySelector('.popup_type_image');\nconst popupImageDescription = document.querySelector('.popup__caption');\nconst cardList = document.querySelector('.places__list');\n\n/**\n * Объект опции:\n * 1. Элемент формы.\n * 2. Элемент поля ввода.\n * 3. Кнопка отправки формы.\n * 4. Класс для отключения кнопки.\n * 5. Класс для выделения попапа цветом.\n * 6. Класс для отображения попапа.\n */\n\nconst configValidation = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n};\n\n\n// Открытие модального окна по нажатию на аватарку. \nAvatar.addEventListener('click', function () {\n    clearValidation(formEditProfile, configValidation);\n    openModal(popupNewAvatar);\n})\n\n// Открытие модального окна по нажатию на кнопку добавления карточки.\nbuttonAddCard.addEventListener('click', function () {\n    clearValidation(formAddCard, configValidation);\n    openModal(popupAddCard);\n})\n\n// Открытие модального кона по нажатию на кнопку редактирования карточки.\nbuttonEditProfile.addEventListener('click', function () {\n    clearValidation(formEditProfile, configValidation);\n    nameInput.value = nameTitle.textContent;\n    jobInput.value = jobTitle.textContent;\n    openModal(popupEditProfile);\n});\n\n// Поиск кнопки закрытия по всей странице для закрытия модального окна.\ndocument.addEventListener('click', function (evt) {\n    if (evt.target.classList.contains('popup__close')) {\n        const currentModal = evt.target.closest('.popup');\n        closeModal(currentModal);\n    }\n});\n\n// Открытие модального окна с изображением.\nfunction openPopupImage(imageSrc, imageAlt) {\n    popupImage.src = imageSrc;\n    popupImage.alt = imageAlt;\n    popupImageDescription.textContent = imageAlt;\n    openModal(popupImageOpen);\n};\n\n// Закрытие модального окна по оверлею\ndocument.addEventListener('click', closeModalOverlay);\n\nenableValidation(configValidation);\n\n\nconst promises = [getUserData, getCardsServer];\n\n// Отображение карточек на сайте после получения информации от сервера и токена пользователя.\nPromise.all(promises)\n    .then(([userData, cardsServer]) => {\n        const getUser = userData._id;\n        cardsServer.forEach(function (item) {\n            const newCard = createCard(item, deleteCard, addLike, getUser, openPopupImage);\n            cardList.append(newCard);\n        })\n    })"],"names":["deleteCard","cardElement","idCard","fetch","concat","method","headers","authorization","then","response","ok","remove","catch","error","console","log","addLike","likeCount","likeButton","cardId","isLiked","classList","contains","res","json","data","textContent","likes","length","toggle","openModal","currentModal","add","document","addEventListener","closeModalEscape","closeModal","removeEventListener","evt","key","querySelector","toggleButtonState","inputList","buttonElement","configValidation","some","inputElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","formElement","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","errorElement","id","errorClass","inputErrorClass","formPhotoProfile","preventDefault","newAvatarPhoto","value","get","startsWith","body","JSON","stringify","avatar","Promise","reject","status","Avatar","style","backgroundImage","finally","popupNewAvatar","formEditProfile","nameTitle","nameInput","jobTitle","jobInput","name","about","formAddCard","popupEditProfile","item","link","newCard","createCard","owner","_id","openPopupImage","cardList","prepend","reset","popupAddCard","getUserData","buttonEditProfile","buttonAddCard","popupImage","popupImageOpen","popupImageDescription","formSelector","imageSrc","imageAlt","src","alt","target","closest","patternMismatch","setCustomValidity","dataset","errorMessage","hideInputError","showInputError","validationMessage","isValid","setEventListeners","enableValidation","promises","getCardsServer","all","_ref","_ref2","userData","cardsServer","getUser","card","templateCard","content","cloneNode","image","append"],"sourceRoot":""}