{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["export function createCard(card, deleteCard, addLike, getUser, openPopupImage) {\n    const templateList = document.querySelector('#card-template').content;\n    const templateCard = templateList.querySelector('.card').cloneNode(true);\n    const likeButton = templateCard.querySelector('.card__like-button');\n    const image = templateCard.querySelector('.card__image');\n    const likeCount = templateCard.querySelector('.card__count');\n    likeCount.textContent = card.likes ? card.likes.length : 0;\n    templateCard.querySelector('.card__title').textContent = card.name;\n    templateCard.querySelector('.card__delete-button').addEventListener('click', () => deleteCard(templateCard, card._id));\n    templateCard.querySelector('.card__like-button').addEventListener('click', () => addLike(likeCount, likeButton, card._id));\n\n    if (getUser !== card.owner._id) {\n        templateCard.querySelector('.card__delete-button').classList.remove('card__delete-button');\n    }\n\n    image.addEventListener('click', function () {\n        openPopupImage(card.link, card.name)\n    });\n\n    image.src = card.link;\n    image.alt = card.name;\n    return templateCard;\n};\n\nexport function deleteCard(cardElement, idCard) {\n    fetch(`https://nomoreparties.co/v1/wff-cohort-35/cards/${idCard}`, {\n        method: 'DELETE',\n        headers: {\n            authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea'\n        }\n    })\n        .then((response) => {\n            if (response.ok) {\n                cardElement.remove();\n            }\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n};\n\nexport function addLike(likeCount, likeButton, cardId) {\n    const isLiked = likeButton.classList.contains('card__like-button_is-active');\n\n    fetch(`https://nomoreparties.co/v1/wff-cohort-35/cards/likes/${cardId}`, {\n        method: isLiked ? 'DELETE' : 'PUT',\n        headers: {\n            authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea'\n        }\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n        })\n        .then((data) => {\n            likeCount.textContent = data.likes.length;\n            likeButton.classList.toggle('card__like-button_is-active');\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n}\n\n","export function openModal(currentModal) {\n    currentModal.classList.add('popup_is-opened');\n    document.addEventListener('keydown', closeModalEscape);\n};\n\nexport function closeModal(currentModal) {\n    currentModal.classList.remove('popup_is-opened');\n    document.removeEventListener('keydown', closeModalEscape);\n\n};\n\nexport function closeModalOverlay(evt) {\n    const currentModal = document.querySelector('.popup_is-opened');\n    if (evt.target === currentModal) {\n        closeModal(currentModal);\n    }\n};\n\nexport function closeModalEscape(evt) {\n    if (evt.key === 'Escape') {\n        const currentModal = document.querySelector('.popup_is-opened');\n        if (currentModal) {\n            closeModal(currentModal);\n        }\n    }\n};\n\n","export const isValid = (formElement, inputElement, configValidation) => {\n    if (inputElement.validity.patternMismatch) {\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n        inputElement.setCustomValidity(\"\");\n    }\n    if (!inputElement.validity.valid) {\n        showInputError(formElement, inputElement, inputElement.validationMessage, configValidation);\n    } else {\n        hideInputError(formElement, inputElement, configValidation)\n    }\n};\n\nexport const showInputError = (formElement, inputElement, errorMessage, configValidation) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(configValidation.errorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(configValidation.inputErrorClass);\n};\n\nexport const hideInputError = (formElement, inputElement, configValidation) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(configValidation.errorClass);\n    errorElement.textContent = '';\n    errorElement.classList.remove(configValidation.inputErrorClass);\n}\n\nexport const hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => {\n        return !inputElement.validity.valid;\n    })\n};\n\nexport const toggleButtonState = (inputList, buttonElement, configValidation) => {\n    if (hasInvalidInput(inputList)) {\n        buttonElement.disabled = true;\n        buttonElement.classList.add(configValidation.inactiveButtonClass);\n    } else {\n        buttonElement.disabled = false;\n        buttonElement.classList.remove(configValidation.inactiveButtonClass);\n    }\n};\n\nexport const setEventListeners = (formElement, configValidation) => {\n    const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\n    const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\n    toggleButtonState(inputList, buttonElement, configValidation);\n    inputList.forEach((inputElement) => {\n        inputElement.addEventListener('input', () => {\n            isValid(formElement, inputElement, configValidation)\n            toggleButtonState(inputList, buttonElement, configValidation);\n        });\n    });\n};\n\nexport const enableValidation = (configValidation) => {\n    const formList = Array.from(document.querySelectorAll(configValidation.formSelector));\n    formList.forEach((formElement) => {\n        setEventListeners(formElement, configValidation);\n    });\n};\n\n/**\n * Функция очистки валидации формы и неактивности кнопки.\n * @param {string} form Добавляем форму.\n * @param {string} Object Добавляем объект конфигурации со всеми опциями.\n */\n\nexport function clearValidation(formElement, configValidation) {\n    const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\n    const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\n\n    inputList.forEach((inputElement) => {\n        const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n        inputElement.classList.remove(configValidation.errorClass);\n        errorElement.textContent = '';\n        errorElement.classList.remove(configValidation.inputErrorClass);\n    });\n\n    buttonElement.disabled = true;\n    buttonElement.classList.add(configValidation.inactiveButtonClass);\n}\n","export const config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n    headers: {\n        authorization: '08a2006d-1e8e-4054-8f6b-d1d1b6dfc2ea',\n        'Content-Type': 'application/json'\n    }\n}\n\n// Проверка фотографии.\nexport const updatePhotoCheck = (url) => {\n    return fetch(`${url.value}`, {\n        method: 'HEAD',\n    })\n        .then(response => {\n            if (!response.ok) {\n                console.log('Произошла ошибка');\n            }\n            const contentType = response.headers.get('Content-Type');\n            if (!contentType.startsWith('image/')) {\n                console.log('URL не является картинкой')\n            }\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n};\n\n// Обновление фотографии пользователя на сайте.\nexport const updatePhoto = (newAvatarPhoto,\n    buttonElement,\n    closeModal,\n    popupNewAvatar,\n    Avatar) => {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: {\n            authorization: `${config.headers.authorization}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            avatar: `${newAvatarPhoto.value}`\n        })\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${response.status}`);\n        })\n        .then((data) => {\n            Avatar.style.backgroundImage = `url(${data.avatar})`;\n        })\n        .finally(() => {\n            buttonElement.textContent = \"Сохранено\";\n            buttonElement.disabled = false;\n            closeModal(popupNewAvatar);\n        })\n        .catch((error) => {\n            console.log('Ошибка:', error);\n        })\n};\n\n// Редактирование имени и деятельности пользователя на сайте.\nexport const updateProfile = (\n    nameInput,\n    jobInput,\n    jobTitle,\n    nameTitle,\n    closeModal,\n    popupEditProfile,\n    buttonElement) => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: {\n            authorization: `${config.headers.authorization}`,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            name: nameInput.value,\n            about: jobInput.value\n        })\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${response.status}`);\n        })\n        .then((data) => {\n            nameTitle.textContent = data.name;\n            jobTitle.textContent = data.about;\n        })\n        .finally(() => {\n            buttonElement.textContent = \"Сохранено\"\n            buttonElement.disabled = false;\n            closeModal(popupEditProfile);\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n};\n\n// Добавление карточки на сайт.\nexport const addCard = (buttonElement,\n    closeModal,\n    formAddCard,\n    popupAddCard,\n    createCard,\n    deleteCard,\n    addLike,\n    openPopupImage,\n    cardList) => {\n    const item = {\n        name: document.querySelector('.popup__input_type_card-name').value,\n        link: document.querySelector('.popup__input_type_url').value,\n    }\n    return fetch(`${config.baseUrl}/cards`, {\n        method: 'POST',\n        headers: {\n            authorization: `${config.headers.authorization}`,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            name: item.name,\n            link: item.link,\n        })\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${response.status}`);\n        })\n        .then((data) => {\n            const newCard = createCard(data, deleteCard, addLike, data.owner._id, openPopupImage);\n            cardList.prepend(newCard);\n        })\n        .finally(() => {\n            buttonElement.textContent = \"Сохранено\"\n            buttonElement.disabled = false;\n            formAddCard.reset();\n            closeModal(popupAddCard);\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n};\n\n// Загрузка информации о пользователе с сервера.\nexport const getUserData = (nameTitle, jobTitle) => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'GET',\n        headers: {\n            authorization: `${config.headers.authorization}`,\n        }\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${response.status}`);\n        })\n        .then((data) => {\n            document.querySelector('.profile__image').style.backgroundImage = `url(${data.avatar})`;\n            nameTitle.textContent = data.name;\n            jobTitle.textContent = data.about;\n            return data;\n        })\n        .catch((error) => {\n            console.log('Ошибка', error);\n        })\n};\n\n// Загрузка карточек с сервера.\nexport const getCreatesCards = () => {\n    return fetch(`${config.baseUrl}/cards`, {\n        method: 'GET',\n        headers: {\n            authorization: `${config.headers.authorization}`,\n        }\n    })\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(`Ошибка: ${response.status}`);\n\n        })\n        .then((data) => {\n            return data;\n        })\n        .catch(() => {\n            console.log('Ошибка', error);\n        })\n};","import '../pages/index.css';\nimport { createCard, deleteCard, addLike } from './card.js';\nimport { openModal, closeModal, closeModalOverlay } from './modal.js';\nimport { enableValidation, clearValidation } from './validation.js';\nimport { config, updatePhotoCheck, updatePhoto, updateProfile, addCard, getUserData, getCreatesCards } from './api.js';\n\nconst buttonEditProfile = document.querySelector('.profile__edit-button');\nconst popupEditProfile = document.querySelector('.popup_type_edit');\nconst buttonAddCard = document.querySelector('.profile__add-button');\nconst popupAddCard = document.querySelector('.popup_type_new-card');\nconst popupNewAvatar = document.querySelector('.popup_type_new_avatar');\nconst Avatar = document.querySelector('.profile__image');\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\nconst nameTitle = document.querySelector('.profile__title');\nconst jobTitle = document.querySelector('.profile__description');\nconst formEditProfile = document.querySelector('.popup__form[name=\"edit-profile\"]');\nconst formAddCard = document.querySelector('.popup__form[name=\"new-place\"]');\nconst popupImage = document.querySelector('.popup__image');\nconst popupImageOpen = document.querySelector('.popup_type_image');\nconst popupImageDescription = document.querySelector('.popup__caption');\nconst cardList = document.querySelector('.places__list');\nconst formPhotoProfile = document.querySelector('.popup__form[name=\"new-avatar\"]');\nconst newAvatarPhoto = document.querySelector('.popup__input_type_avatar');\n\n\n/**\n * Объект опции:\n * 1. Элемент формы.\n * 2. Элемент поля ввода.\n * 3. Кнопка отправки формы.\n * 4. Класс для отключения кнопки.\n * 5. Класс для выделения попапа цветом.\n * 6. Класс для отображения попапа.\n */\n\nconst configValidation = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n};\n\n\n// Открытие модального окна по нажатию на аватарку. \nAvatar.addEventListener('click', function () {\n    clearValidation(formEditProfile, configValidation);\n    openModal(popupNewAvatar);\n})\n\n// Открытие модального окна по нажатию на кнопку добавления карточки.\nbuttonAddCard.addEventListener('click', function () {\n    clearValidation(formAddCard, configValidation);\n    openModal(popupAddCard);\n})\n\n// Открытие модального кона по нажатию на кнопку редактирования карточки.\nbuttonEditProfile.addEventListener('click', function () {\n    clearValidation(formEditProfile, configValidation);\n    nameInput.value = nameTitle.textContent;\n    jobInput.value = jobTitle.textContent;\n    openModal(popupEditProfile);\n});\n\n// Поиск кнопки закрытия по всей странице для закрытия модального окна.\ndocument.addEventListener('click', function (evt) {\n    if (evt.target.classList.contains('popup__close')) {\n        const currentModal = evt.target.closest('.popup');\n        closeModal(currentModal);\n    }\n});\n\n// Открытие модального окна с изображением.\nfunction openPopupImage(imageSrc, imageAlt) {\n    popupImage.src = imageSrc;\n    popupImage.alt = imageAlt;\n    popupImageDescription.textContent = imageAlt;\n    openModal(popupImageOpen);\n};\n\n// Закрытие модального окна по оверлею\ndocument.addEventListener('click', closeModalOverlay);\n\nenableValidation(configValidation);\n\nformPhotoProfile.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n\n    const buttonElement = formPhotoProfile.querySelector('.popup__button');\n    buttonElement.textContent = \"Сохранение...\";\n    buttonElement.disabled = true;\n    updatePhotoCheck(newAvatarPhoto);\n    updatePhoto(newAvatarPhoto, buttonElement, closeModal, popupNewAvatar, Avatar);\n});\n\nformEditProfile.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n\n    nameTitle.textContent = nameInput.value;\n    jobTitle.textContent = jobInput.value;\n\n    const buttonElement = formEditProfile.querySelector('.popup__button');\n    buttonElement.textContent = \"Сохранение...\"\n    buttonElement.disabled = true;\n    updateProfile(nameInput, jobInput, jobTitle, nameTitle, closeModal, popupEditProfile, buttonElement);\n});\n\nformAddCard.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n\n    const buttonElement = formAddCard.querySelector('.popup__button');\n    buttonElement.textContent = \"Сохранение...\";\n    buttonElement.disabled = true;\n\n    addCard(buttonElement, closeModal, formAddCard, popupAddCard, createCard, deleteCard, addLike, openPopupImage, cardList)\n});\n\nconst promises = [getUserData(nameTitle, jobTitle), getCreatesCards()];\n\n// Отображение карточек на сайте после получения информации от сервера и токена пользователя.\nPromise.all(promises)\n    .then(([userData, getCreatesCards]) => {\n        const getUser = userData._id;\n        getCreatesCards.forEach(function (item) {\n            const newCard = createCard(item, deleteCard, addLike, getUser, openPopupImage);\n            cardList.append(newCard);\n        })\n    })"],"names":["createCard","card","deleteCard","addLike","getUser","openPopupImage","templateCard","document","querySelector","content","cloneNode","likeButton","image","likeCount","textContent","likes","length","name","addEventListener","_id","owner","classList","remove","link","src","alt","cardElement","idCard","fetch","concat","method","headers","authorization","then","response","ok","catch","error","console","log","cardId","isLiked","contains","res","json","data","toggle","openModal","currentModal","add","closeModalEscape","closeModal","removeEventListener","evt","key","toggleButtonState","inputList","buttonElement","configValidation","some","inputElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","formElement","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","errorElement","id","errorClass","inputErrorClass","config","buttonEditProfile","popupEditProfile","buttonAddCard","popupAddCard","popupNewAvatar","Avatar","nameInput","jobInput","nameTitle","jobTitle","formEditProfile","formAddCard","popupImage","popupImageOpen","popupImageDescription","cardList","formPhotoProfile","newAvatarPhoto","formSelector","imageSrc","imageAlt","value","target","closest","patternMismatch","setCustomValidity","dataset","errorMessage","hideInputError","showInputError","validationMessage","isValid","setEventListeners","enableValidation","preventDefault","get","startsWith","body","JSON","stringify","avatar","Promise","reject","status","style","backgroundImage","finally","updatePhoto","about","updateProfile","item","newCard","prepend","reset","addCard","promises","getUserData","all","_ref","_ref2","userData","getCreatesCards","append"],"sourceRoot":""}